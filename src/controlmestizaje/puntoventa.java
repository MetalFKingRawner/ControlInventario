/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controlmestizaje;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rawne
 */
public class puntoventa extends javax.swing.JFrame {

    /**
     * Creates new form puntoventa
     */
    public puntoventa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabPro = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(558, 390));

        jPanel1.setLayout(null);

        tabPro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Precio"
            }
        ));
        tabPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabProMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabPro);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 70, 240, 220);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Precio"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(290, 70, 240, 220);

        jButton1.setText("Mostrar productos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(90, 310, 130, 23);

        jLabel2.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Venta");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(390, 40, 50, 20);

        jLabel3.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Lista de productos");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(60, 40, 180, 14);

        jButton2.setText("Registrar venta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(400, 310, 120, 23);

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(310, 310, 80, 23);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlmestizaje/fondomora (1).jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 560, 370);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        updateTabla(tabPro);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        vent = new conecventa();
        int fila2 = jTable2.getSelectedRow();
        DefaultTableModel modeloTablaIns = (DefaultTableModel) jTable2.getModel();
        try {
                for (int i = 0; i < modeloTablaIns.getRowCount(); i++) {
                    // Obtener datos de la fila
                    String nombre = modeloTablaIns.getValueAt(i, 1).toString();
                    double precio = Integer.parseInt(modeloTablaIns.getValueAt(i, 2).toString()); 
                    String sql = "INSERT INTO venta(nombre_prod, costo,cantidad,fecha_venta) VALUES (?, ?,1,NOW())";
                    PreparedStatement pstmt = vent.getConnection().prepareStatement(sql);
                    pstmt.setString(1, nombre);
                    pstmt.setDouble(2, precio);
                    int filasAfectadas = pstmt.executeUpdate();
                    if (filasAfectadas > 0) {
                        //JOptionPane.showMessageDialog(null, "Venta exitosa.");
                        actualizar(jTable2);
                    } 
                    else {
                        JOptionPane.showMessageDialog(null, "No se pudo hacer la venta.");}
                    pstmt.close();
                }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos.");}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tabProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabProMouseClicked
        // TODO add your handling code here:
        int fila2 = tabPro.getSelectedRow();
        if (fila2 >= 0) {
            String idSeleccionado = (String)tabPro.getValueAt(fila2, 0);
            String nombreSeleccionado = (String) tabPro.getValueAt(fila2, 1);
            String precio = (String)tabPro.getValueAt(fila2, 2);
            // Llenar la segunda tabla con los datos obtenidos
            DefaultTableModel modeloTablaIns = (DefaultTableModel) jTable2.getModel();
            modeloTablaIns.addRow(new Object[]{idSeleccionado, nombreSeleccionado, precio});
        }
    }//GEN-LAST:event_tabProMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTable2.getSelectedRow();
         // Verificar si hay una fila seleccionada
        if (filaSeleccionada != -1) {
        // Obtener el modelo de la tabla
            DefaultTableModel modeloTablaIns = (DefaultTableModel) jTable2.getModel();
        // Eliminar la fila seleccionada
            modeloTablaIns.removeRow(filaSeleccionada);
        } else {
        // Si no hay una fila seleccionada, mostrar un mensaje o realizar alguna acción
            JOptionPane.showMessageDialog(this, "No haz seleccionado algun insumo.", "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    Object[][] dtPro;
    private Conexion con;
    private conecventa vent;
    private void updateTabla(JTable tabla){             
        String[] columNames = {"ID", "Nombre", "Precio"};  
        // se utiliza la funcion
        dtPro = getDatos();
        // se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel(dtPro,columNames);                           
        tabla.setModel(datos); 
    }
    
    public Object [][] getDatos(){
        Conexion con = new Conexion();
        int registros = 0;
        try{         
            PreparedStatement pstm = con.getConnection().prepareStatement("SELECT count(id_receta) as total FROM receta");
            ResultSet res = pstm.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();
        }catch(SQLException e){
            System.out.println(e);
        }    
        Object[][] data = new String[registros][6];
        try{    
            PreparedStatement pstm = con.getConnection().prepareStatement("SELECT " +
                " id_receta, nombre, precio" +
                " FROM receta" +
                " ORDER BY id_receta");
            ResultSet res = pstm.executeQuery();
            int i = 0;
            while(res.next()){
                String idreceta = res.getString("id_receta");
                String nombreceta = res.getString("nombre");
                String porcioness = res.getString("precio");
                data[i][0] = idreceta;            
                data[i][1] = nombreceta;
                data[i][2] = porcioness;
                i++;
            }
            res.close();
        }catch(SQLException e){
         System.out.println(e);
        }
        return data;
    }
    
    public void actualizar(JTable tabla){
        con = new Conexion();
        DefaultTableModel modeloTablaIns = (DefaultTableModel) tabla.getModel();
        for (int i = 0; i < modeloTablaIns.getRowCount(); i++) {
            String nombre = modeloTablaIns.getValueAt(i, 1).toString();
            int idrec = Integer.parseInt(modeloTablaIns.getValueAt(i, 0).toString());
            String sql = "select id_producto, cantidad, unidad_de_medida from recetaxproducto where id_receta= ?";
            try {
                PreparedStatement pstmt = con.getConnection().prepareStatement(sql);
                pstmt.setInt(1, idrec);
                ResultSet resultSet = pstmt.executeQuery();
                while (resultSet.next()) {
                    int idProducto = resultSet.getInt("id_producto");
                    double cantidadpro = resultSet.getDouble("cantidad");
                    String unidadMedidapro = resultSet.getString("unidad_de_medida");
                    System.out.println(unidadMedidapro);
                    String sqld = "select unidad_de_medida, cantidad from inventario where id_producto= ?";
                    PreparedStatement pstmt2 = con.getConnection().prepareStatement(sqld);
                    pstmt2.setInt(1, idProducto);
                    ResultSet resultSet2 = pstmt2.executeQuery();
                    if(resultSet2.next()){
                        String unidadinventario = resultSet2.getString("unidad_de_medida");
                        //System.out.println(unidadinventario);
                        double cantinv = resultSet2.getDouble("cantidad");
                        double nuevacant = comprobar(unidadMedidapro,cantidadpro,unidadinventario,cantinv);
                        //System.out.println(cantidadpro + " "+ cantinv + " "+nuevacant);
                        String sqld2 = "update inventario set cantidad = ? where id_producto=?;";
                        PreparedStatement pstmt3 = con.getConnection().prepareStatement(sqld2);
                        pstmt3.setDouble(1, nuevacant);
                        pstmt3.setInt(2, idProducto);
                        pstmt3.executeUpdate();
                        if(nuevacant <= 0.09){
                            JOptionPane.showMessageDialog(this, "El insumo "+nombre+" está por terminarse", "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
                        }
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(puntoventa.class.getName()).log(Level.SEVERE, null, ex);
            }
        }   
    }
    
    public static double comprobar(String unipro, double cantpro, String uninv, double cantinv){
        switch(uninv.toLowerCase()){
            case "kg":
                if(uninv.equalsIgnoreCase(unipro)){
                    double cantidad = cantinv-cantpro;
                    //System.out.println(cantidad);
                    return cantidad;
                }
                else{
                    double cantidad = cantinv*1000;
                    cantidad = cantidad-cantpro;
                    cantidad = cantidad/1000;
                    //System.out.println(cantidad);
                    return cantidad;
                }
            case "lt":
                if(uninv.equalsIgnoreCase(unipro)){
                    //System.out.println("entrada lt");
                    double cantidad = cantinv-cantpro;
                    return cantidad;
                }
                else if(unipro.equalsIgnoreCase("oz")){
                    //System.out.println("entrada oz");
                    cantpro = cantpro*30;
                    double cantidad = cantinv*1000;
                    cantidad = cantidad-cantpro;
                    cantidad = cantidad/1000;
                    //System.out.println(cantidad);
                    return cantidad;
                }
                else{
                    System.out.println("entrada normal");
                    double cantidad = cantinv*1000;
                    cantidad = cantidad-cantpro;
                    cantidad = cantidad/1000;
                    return cantidad;
                }
            default:
                return cantinv;
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(puntoventa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(puntoventa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(puntoventa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(puntoventa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new puntoventa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tabPro;
    // End of variables declaration//GEN-END:variables
}
