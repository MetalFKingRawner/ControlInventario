/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controlmestizaje;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rawne
 */
public class Recetas extends javax.swing.JFrame {

    public String no;
    /**
     * Creates new form Recetas
     */
    public Recetas(String nombr) {
        this.no = nombr;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabPro = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabInsu = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("RECETAS EL MESTIZAJE");
        setMinimumSize(new java.awt.Dimension(660, 450));
        setPreferredSize(new java.awt.Dimension(660, 450));
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel9.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel9.setText("Nombre");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(470, 120, 70, 14);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(400, 140, 210, 30);

        jLabel10.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel10.setText("Precio");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(480, 180, 50, 20);

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField2);
        jTextField2.setBounds(400, 200, 210, 30);

        tabPro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Unidad"
            }
        ));
        tabPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabProMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabPro);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(30, 40, 340, 140);

        tabInsu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Cantidad", "Unidad medida"
            }
        ));
        jScrollPane4.setViewportView(tabInsu);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(30, 200, 340, 140);

        jButton3.setBackground(new java.awt.Color(0, 51, 153));
        jButton3.setFont(new java.awt.Font("Lucida Sans", 3, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Actualizar productos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(410, 60, 180, 30);

        jButton4.setBackground(new java.awt.Color(0, 51, 153));
        jButton4.setFont(new java.awt.Font("Lucida Sans", 3, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Eliminar insumo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(420, 260, 150, 30);

        jButton5.setBackground(new java.awt.Color(0, 51, 153));
        jButton5.setFont(new java.awt.Font("Lucida Sans", 3, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Aceptar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(450, 310, 100, 25);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlmestizaje/fondo_c.jpg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 20, 610, 340);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlmestizaje/fondomora (1).jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 650, 400);

        if(no.equalsIgnoreCase("isaac")){

            jTabbedPane1.addTab("Agregar receta", jPanel1);
        }

        jPanel2.setLayout(null);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Precio"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable3);

        jPanel2.add(jScrollPane5);
        jScrollPane5.setBounds(40, 40, 360, 100);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_prod", "Nombre", "Cantidad", "Unidad medida"
            }
        ));
        jScrollPane6.setViewportView(jTable4);

        jPanel2.add(jScrollPane6);
        jScrollPane6.setBounds(40, 150, 360, 90);

        jLabel11.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel11.setText("Nombre");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(490, 70, 70, 17);

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });
        jPanel2.add(jTextField3);
        jTextField3.setBounds(420, 90, 200, 30);

        jLabel12.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel12.setText("Precio");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(500, 130, 50, 17);

        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });
        jPanel2.add(jTextField4);
        jTextField4.setBounds(420, 150, 200, 30);

        jButton6.setBackground(new java.awt.Color(0, 51, 153));
        jButton6.setFont(new java.awt.Font("Lucida Sans", 3, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Actualizar receta");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);
        jButton6.setBounds(430, 320, 180, 23);

        jButton7.setBackground(new java.awt.Color(0, 51, 153));
        jButton7.setFont(new java.awt.Font("Lucida Sans", 3, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Mostrar recetas");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7);
        jButton7.setBounds(440, 220, 160, 25);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Unidad medida"
            }
        ));
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTable5);

        jPanel2.add(jScrollPane7);
        jScrollPane7.setBounds(110, 250, 220, 100);

        jButton8.setBackground(new java.awt.Color(0, 51, 153));
        jButton8.setFont(new java.awt.Font("Lucida Sans", 3, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Mostrar insumos");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton8);
        jButton8.setBounds(440, 270, 160, 25);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlmestizaje/fondo_c.jpg"))); // NOI18N
        jPanel2.add(jLabel6);
        jLabel6.setBounds(20, 20, 620, 340);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlmestizaje/fondomora (1).jpg"))); // NOI18N
        jPanel2.add(jLabel3);
        jLabel3.setBounds(0, 0, 650, 400);

        if(no.equalsIgnoreCase("isaac")){

            jTabbedPane1.addTab("Editar receta", jPanel2);
        }

        jPanel3.setLayout(null);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Precio"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(70, 50, 500, 240);

        jButton1.setBackground(new java.awt.Color(0, 51, 153));
        jButton1.setFont(new java.awt.Font("Lucida Sans", 3, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);
        jButton1.setBounds(180, 300, 110, 30);

        jButton2.setBackground(new java.awt.Color(0, 51, 153));
        jButton2.setFont(new java.awt.Font("Lucida Sans", 3, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(360, 300, 110, 30);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlmestizaje/fondo_c.jpg"))); // NOI18N
        jPanel3.add(jLabel7);
        jLabel7.setBounds(20, 20, 610, 340);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlmestizaje/fondomora (1).jpg"))); // NOI18N
        jPanel3.add(jLabel4);
        jLabel4.setBounds(0, 0, 660, 400);

        if(no.equalsIgnoreCase("isaac")){

            jTabbedPane1.addTab("Eliminar receta", jPanel3);
        }

        jPanel4.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Precio"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel4.add(jScrollPane1);
        jScrollPane1.setBounds(40, 40, 240, 240);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_Produc", "Nombre", "Cantidad", "Unidad medida"
            }
        ));
        jScrollPane8.setViewportView(jTable6);

        jPanel4.add(jScrollPane8);
        jScrollPane8.setBounds(310, 40, 310, 240);

        jButton9.setBackground(new java.awt.Color(0, 51, 153));
        jButton9.setFont(new java.awt.Font("Lucida Sans", 3, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Actualizar recetario");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton9);
        jButton9.setBounds(240, 310, 180, 23);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlmestizaje/fondo_c.jpg"))); // NOI18N
        jPanel4.add(jLabel8);
        jLabel8.setBounds(20, 20, 620, 340);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlmestizaje/fondomora (1).jpg"))); // NOI18N
        jPanel4.add(jLabel5);
        jLabel5.setBounds(0, 0, 660, 400);

        jTabbedPane1.addTab("Visualizar receta", jPanel4);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 0, 660, 450);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int fila2 = jTable2.getSelectedRow();
        if(fila2 != -1){
            String nombre = (jTable2.getValueAt(fila2,1)).toString();
            int resp = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar "+nombre+"?", "¡ALERTA!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if(resp==JOptionPane.YES_OPTION){
                Object id_r = jTable2.getValueAt(fila2,0);
                try {
                    String id = id_r.toString();
                    eliminarrecxprod(id);
                    con = new Conexion();
                    String sql = "delete from receta where id_receta=?";
                    PreparedStatement pstmt = con.getConnection().prepareStatement(sql);
                    pstmt.setString(1, id);
                    int filasAfectadas = pstmt.executeUpdate();
                    if (filasAfectadas > 0) {
                        JOptionPane.showMessageDialog(null,"Insumo eliminado exitosamente","EXITO",JOptionPane.INFORMATION_MESSAGE);} 
                    else {
                        JOptionPane.showMessageDialog(null, "No se pudo eliminar el insumo.");}
                    pstmt.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos.");
                }
                updateTabla(jTable2);
            }
            else if ( resp == JOptionPane.NO_OPTION){
                JOptionPane.showMessageDialog(null, "El insumo "+ nombre+ " no fue eliminado");
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Por favor, selecciona una receta","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        updateTabla(jTable2);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        updateTablaProducto(tabPro);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tabInsu.getSelectedRow();
         // Verificar si hay una fila seleccionada
        if (filaSeleccionada != -1) {
        // Obtener el modelo de la tabla
            DefaultTableModel modeloTablaIns = (DefaultTableModel) tabInsu.getModel();
        // Eliminar la fila seleccionada
            modeloTablaIns.removeRow(filaSeleccionada);
        } else {
        // Si no hay una fila seleccionada, mostrar un mensaje o realizar alguna acción
            JOptionPane.showMessageDialog(this, "No haz seleccionado algun insumo.", "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tabProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabProMouseClicked
        // TODO add your handling code here:
        int fila2 = tabPro.getSelectedRow();
        if (fila2 >= 0) {
            String idSeleccionado = (String)tabPro.getValueAt(fila2, 0);
            String nombreSeleccionado = (String) tabPro.getValueAt(fila2, 1);
            // Llenar la segunda tabla con los datos obtenidos
            DefaultTableModel modeloTablaIns = (DefaultTableModel) tabInsu.getModel();
            modeloTablaIns.addRow(new Object[]{idSeleccionado, nombreSeleccionado});
        }
    }//GEN-LAST:event_tabProMouseClicked

    private Conexion con;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modeloTablaIns = (DefaultTableModel) tabInsu.getModel();
        String nom = jTextField1.getText();
        String costoStr = jTextField2.getText();
        if (nom.isEmpty()|| costoStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, completa todos los campos.");
            return;}
        double cost = Double.parseDouble(costoStr);
        try {
            con = new Conexion();
            String sql = "INSERT INTO receta(nombre, precio) VALUES (?, ?)";
            PreparedStatement pstmt = con.getConnection().prepareStatement(sql);
            pstmt.setString(1, nom);
            pstmt.setDouble(2, cost);
            int filasAfectadas = pstmt.executeUpdate();
            if (filasAfectadas > 0) {
                int idrec = obtenerIdRecetaInsertada(nom);
                for (int i = 0; i < modeloTablaIns.getRowCount(); i++) {
                    // Obtener datos de la fila
                    int idProducto = Integer.parseInt(modeloTablaIns.getValueAt(i, 0).toString());
                    int cantidad = Integer.parseInt(modeloTablaIns.getValueAt(i, 2).toString()); 
                    String unidadMedida = (String) modeloTablaIns.getValueAt(i, 3);
                    // Insertar el nuevo registro en la tabla 'recetaxproducto'
                    insertarRecetaXProducto(idrec, idProducto, cantidad, unidadMedida);
                }
                JOptionPane.showMessageDialog(null, "Receta agregada exitosamente.");} 
            else {
                JOptionPane.showMessageDialog(null, "No se pudo agregar la receta.");}
            pstmt.close();

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos.");}
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        updateTabla(jTable3);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        int fila2 = jTable3.getSelectedRow();
        if (fila2 >= 0) {
            Object nombreprod = jTable3.getValueAt(fila2, 1);
            Object costoprod = jTable3.getValueAt(fila2,2);
            int idReceta = Integer.parseInt(jTable3.getValueAt(fila2, 0).toString());
            jTextField3.setText(nombreprod.toString());
            jTextField4.setText(costoprod.toString());
            actualizarJTable4(idReceta,jTable4);
        }
    }//GEN-LAST:event_jTable3MouseClicked

    private void actualizarrecetaxproducto(int idReceta, int idProducto, double cantidad, String unidadMedida){
            try {
                con = new Conexion();
                String sql = "update recetaxproducto set cantidad=?, unidad_de_medida=? where id_receta=? and id_producto=?;";
                PreparedStatement pstmt = con.getConnection().prepareStatement(sql);
                pstmt.setDouble(1, cantidad);
                pstmt.setString(2, unidadMedida);
                pstmt.setInt(3, idReceta);
                pstmt.setInt(4, idProducto);
                int filasAfectadas = pstmt.executeUpdate();
                if (filasAfectadas > 0) {
                    JOptionPane.showMessageDialog(null,"recetaxproducto" + idProducto+" actualizado exitosamente","EXITO",JOptionPane.INFORMATION_MESSAGE);} 
                else {
                    JOptionPane.showMessageDialog(null, "No se pudo actualizar el insumo.");}
                pstmt.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos.");}
        
    }
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add  String nom = jTextField1.getText();
        DefaultTableModel modeloTablaIns = (DefaultTableModel) jTable4.getModel();
        String nombre = jTextField3.getText();
        String costoStr = jTextField4.getText();
        int fila2 = jTable3.getSelectedRow();
        if(fila2 != -1){
            Object idrec = jTable3.getValueAt(fila2,0);
            int id=Integer.parseInt(idrec.toString());
            if (nombre.isEmpty()|| costoStr.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor, completa todos los campos.");
                return;}
            double cost = Double.parseDouble(costoStr);
            try {
                con = new Conexion();
                //update receta set nombre='nuevito', precio=432 where id_receta=224;
                String sql = "update receta set nombre=?, precio=? where id_receta=?";
                PreparedStatement pstmt = con.getConnection().prepareStatement(sql);
                pstmt.setString(1, nombre);
                pstmt.setDouble(2, cost);
                pstmt.setDouble(3, id);
                int filasAfectadas = pstmt.executeUpdate();
                if (filasAfectadas > 0) {
                    for (int i = 0; i < modeloTablaIns.getRowCount(); i++) {
                        // Obtener datos de la fila
                        int idProducto = Integer.parseInt(modeloTablaIns.getValueAt(i, 0).toString());
                        int cantidad = Integer.parseInt(modeloTablaIns.getValueAt(i, 2).toString()); 
                        String unidadMedida = (String) modeloTablaIns.getValueAt(i, 3);
                        // Insertar el nuevo registro en la tabla 'recetaxproducto'
                        actualizarrecetaxproducto(id, idProducto, cantidad, unidadMedida);
                    }
                    JOptionPane.showMessageDialog(null,"Receta acutalizada exitosamente","EXITO",JOptionPane.INFORMATION_MESSAGE);} 
                else {
                    JOptionPane.showMessageDialog(null, "No se pudo actualizar la receta");}
                pstmt.close();
                jTextField1.setText("");jTextField2.setText("");updateTabla(jTable3);
            }
            catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos.");}
        }
        else{
            JOptionPane.showMessageDialog(null, "Porfavor, selecciona una receta de la tabla.");}
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        updateTablaProducto(jTable5);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        // TODO add your handling code here:
        int fila2 = jTable5.getSelectedRow();
        if (fila2 >= 0) {
            String idSeleccionado = (String)jTable5.getValueAt(fila2, 0);
            String nombreSeleccionado = (String) jTable5.getValueAt(fila2, 1);
            // Llenar la segunda tabla con los datos obtenidos
            DefaultTableModel modeloTablaIns = (DefaultTableModel) jTable4.getModel();
            modeloTablaIns.addRow(new Object[]{idSeleccionado, nombreSeleccionado});
        }
    }//GEN-LAST:event_jTable5MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        updateTabla(jTable1);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int fila2 = jTable1.getSelectedRow();
        if (fila2 >= 0) {
            int idReceta = Integer.parseInt(jTable1.getValueAt(fila2, 0).toString());
            actualizarJTable4(idReceta,jTable6);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        int limit = 50; // Limitar a 50 caracteres
        char character = evt.getKeyChar();
        if (!(Character.isLetter(character) || character == ' '))  {
            evt.consume(); // Evita que se introduzcan caracteres diferentes a letras
        }
        if (jTextField1.getText().length() >= limit) {
            evt.consume(); // Evita que se introduzcan más caracteres
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
        int limit = 5; // Limitar a 5 caracteres
        char character = evt.getKeyChar();
        if (!Character.isDigit(character) && character != '.' && character != evt.VK_BACK_SPACE) {
            evt.consume(); // Evita que se introduzcan caracteres diferentes a numeros
        }
        if (jTextField2.getText().length() >= limit) {
            evt.consume(); // Evita que se introduzcan más caracteres
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        // TODO add your handling code here:
        int limit = 50; // Limitar a 50 caracteres
        char character = evt.getKeyChar();
        if (!(Character.isLetter(character) || character == ' '))  {
            evt.consume(); // Evita que se introduzcan caracteres diferentes a letras
        }
        if (jTextField3.getText().length() >= limit) {
            evt.consume(); // Evita que se introduzcan más caracteres
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        // TODO add your handling code here:
        int limit = 5; // Limitar a 5 caracteres
        char character = evt.getKeyChar();
        if (!Character.isDigit(character) && character != '.' && character != evt.VK_BACK_SPACE) {
            evt.consume(); // Evita que se introduzcan caracteres diferentes a numeros
        }
        if (jTextField4.getText().length() >= limit) {
            evt.consume(); // Evita que se introduzcan más caracteres
        }
    }//GEN-LAST:event_jTextField4KeyTyped

    private void actualizarJTable4(int idReceta,JTable tabla) {
        // Limpia el modelo actual de jTable4
        DefaultTableModel modeloJTable4 = (DefaultTableModel) tabla.getModel();
        modeloJTable4.setRowCount(0);

        try {
            con = new Conexion();
            // Consulta SQL para obtener datos de recetaxproducto
            String sql = "SELECT r.id, r.id_receta, r.id_producto, r.cantidad, r.unidad_de_medida, p.nombre "
                    + "FROM recetaxproducto r "
                    + "JOIN producto p ON r.id_producto = p.id "
                    + "WHERE r.id_receta = ?";

            // Prepara la sentencia SQL
            PreparedStatement statement = con.getConnection().prepareStatement(sql);
            statement.setInt(1, idReceta);

            // Ejecuta la consulta
            ResultSet resultSet = statement.executeQuery();

            // Llena jTable4 con los resultados
            while (resultSet.next()) {
                int idProducto = resultSet.getInt("id_producto");
                int cantidad = resultSet.getInt("cantidad");
                String unidadMedida = resultSet.getString("unidad_de_medida");
                String nombreProducto = resultSet.getString("nombre");

                // Agrega una fila a jTable4
                modeloJTable4.addRow(new Object[]{idProducto, nombreProducto, cantidad, unidadMedida});
            }

            // Cierra los recursos
            resultSet.close();
            statement.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            // Maneja la excepción según tus necesidades
        }
    }
    
    private void insertarRecetaXProducto(int idReceta, int idProducto, double cantidad, String unidadMedida) {
        try {
            con = new Conexion();
            String sql = "INSERT INTO recetaxproducto(id_receta, id_producto, cantidad, unidad_de_medida) VALUES (?, ?, ?, ?)";
            PreparedStatement pstmt = con.getConnection().prepareStatement(sql);
            pstmt.setInt(1, idReceta);
            pstmt.setInt(2, idProducto);
            pstmt.setDouble(3, cantidad);
            pstmt.setString(4, unidadMedida);
            int filasAfectadas = pstmt.executeUpdate();
            if (filasAfectadas > 0) {
                //OptionPane.showMessageDialog(null, "Receta agregada exitosamente.");
            }
            else {
                JOptionPane.showMessageDialog(null, "No se pudo agregar la receta.");}
            pstmt.close();

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos.");}
    }
    
    private int obtenerIdRecetaInsertada(String nomb) {
        int idReceta = 0;
        try {
            con = new Conexion();
            String sql = "select id_receta from receta where nombre = ?";
            PreparedStatement pstmt = con.getConnection().prepareStatement(sql);
            pstmt.setString(1, nomb);
            ResultSet resultSet = pstmt.executeQuery();
            // Verificar si hay resultados
            if (resultSet.next()) {
                // Obtener el valor de la columna 'id_receta'
                idReceta = resultSet.getInt("id_receta");
            }
            else {
                JOptionPane.showMessageDialog(null, "No se pudo agregar la receta.");}
            pstmt.close();resultSet.close();

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos.");}
        return idReceta;
    }
    
    private void eliminarrecxprod(String id){
        try {
            con = new Conexion();
            String sql = "delete from recetaxproducto where id_receta=?";
            PreparedStatement pstmt = con.getConnection().prepareStatement(sql);
            pstmt.setString(1, id);
            int filasAfectadas = pstmt.executeUpdate();
            if (filasAfectadas > 0) {
                JOptionPane.showMessageDialog(null,"Insumo eliminado exitosamente","EXITO",JOptionPane.INFORMATION_MESSAGE);
            } 
            else {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar el insumo.");}
            pstmt.close();

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos.");}
    }
    /**
     * @param args the command line arguments
     */
    Object[][] dtPro;
    Object[][] dtIns;
    
    private void updateTabla(JTable tabla){             
        String[] columNames = {"ID", "Nombre", "Precio"};  
        // se utiliza la funcion
        dtPro = getDatos();
        // se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel(dtPro,columNames);                           
        tabla.setModel(datos); 
    }
    
    public Object [][] getDatos(){
        Conexion con = new Conexion();
        int registros = 0;
        try{         
            PreparedStatement pstm = con.getConnection().prepareStatement("SELECT count(id_receta) as total FROM receta");
            ResultSet res = pstm.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();
        }catch(SQLException e){
            System.out.println(e);
        }    
        Object[][] data = new String[registros][6];
        try{    
            PreparedStatement pstm = con.getConnection().prepareStatement("SELECT " +
                " id_receta, nombre, precio" +
                " FROM receta" +
                " ORDER BY id_receta");
            ResultSet res = pstm.executeQuery();
            int i = 0;
            while(res.next()){
                String idreceta = res.getString("id_receta");
                String nombreceta = res.getString("nombre");
                String porcioness = res.getString("precio");
                data[i][0] = idreceta;            
                data[i][1] = nombreceta;
                data[i][2] = porcioness;
                i++;
            }
            res.close();
        }catch(SQLException e){
         System.out.println(e);
        }
        return data;
    }
    
    private void updateTablaProducto(JTable tabla){             
        String[] columNames = {"ID", "Nombre", "Unidad"};  
        // se utiliza la funcion
        dtIns = getDatosP();
        // se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel(dtIns,columNames);                           
        tabla.setModel(datos); 
    }
    
    public Object [][] getDatosP(){
        Conexion con = new Conexion();
        int registros = 0;
        try{         
            PreparedStatement pstm = con.getConnection().prepareStatement("SELECT count(id) as total FROM producto");
            ResultSet res = pstm.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();
        }catch(SQLException e){
            System.out.println(e);}    
        Object[][] data = new String[registros][6];
        try{    
            PreparedStatement pstm = con.getConnection().prepareStatement("SELECT " +
                " id, nombre, unidad_de_medida" +
                " FROM producto" +
                " ORDER BY id");
            ResultSet res = pstm.executeQuery();
            int i = 0;
            while(res.next()){
                String idreceta = res.getString("id");
                String nombreceta = res.getString("nombre");
                String porcioness = res.getString("unidad_de_medida");
                data[i][0] = idreceta;            
                data[i][1] = nombreceta;
                data[i][2] = porcioness;
                i++;
            }
            res.close();
        }catch(SQLException e){System.out.println(e);}
        return data;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Recetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Recetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Recetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Recetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
           // public void run() {
              //  new Recetas().setVisible(true);
            //}
        //});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTable tabInsu;
    private javax.swing.JTable tabPro;
    // End of variables declaration//GEN-END:variables
}
